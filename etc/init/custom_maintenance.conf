description "Distribution maintenance init script"

start on runlevel [06]

script
	#   REMOVE BOOTCHART LOGS
    if [ -d /var/log/bootchart ]; then
    	rm -f /var/log/bootchart/*
    fi

    #   REMOVE '.goutputstream-*' FILES FROM USER'S HOME FOLDER
    for user_dir in /home/*; do
        rm -f "$user_dir"/.goutputstream-*
    done

    #   UNHIDE XDG STARTUP APPLICATIONS
    if [ -d /etc/xdg/autostart ]; then
        sed -i 's/NoDisplay=true/NoDisplay=false/g' /etc/xdg/autostart/*.desktop
    fi

    #   UNHIDE GNOME STARTUP APPLICATIONS
    if [ -d /usr/share/gnome/autostart ]; then
        sed -i 's/NoDisplay=true/NoDisplay=false/g' /usr/share/gnome/autostart/*.desktop
    fi

    #   MAKE A GRUB2 ENTRY FOR ALL OTHER MOUNTED DISTROS
	#   1. Create temporary working directory
    mkdir -p /tmp/custom-grub
    #   2. Creating custom grub entry beginning
    #      adjust distro name accordingly
    My_Distro_Name="sdx-00-Input-distro-name"
    #   3. Creating GRUB2 entry
    echo '#!/bin/sh
exec tail -n +3 $0
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the <exec tail> line above.
' >> /tmp/custom-grub/40_custom-"$My_Distro_Name"
    #   4. Creating the rest of custom GRUB2 entry
    sed '/### BEGIN \/etc\/grub.d\/10_linux ###/,/### END \/etc\/grub.d\/10_linux ###/!d' /boot/grub/grub.cfg > /tmp/custom-grub-prep
    sed '/menuentry/,/### END \/etc\/grub.d\/10_linux ###/!d' /tmp/custom-grub-prep >> /tmp/custom-grub/40_custom-"$My_Distro_Name"
    #   5. Turn custom GRUB2 entry into an executable file
    chmod +x /tmp/custom-grub/40_custom-"$My_Distro_Name"
    #   6. Copy custom GRUB2 entry file to all mounted distros
    for i in /mnt/HDD/* ; do
        # copy to distributions installed on the HDD
        if [ -d "$i"/etc/grub.d ]; then 
            cp /tmp/custom-grub/40_custom-"$My_Distro_Name" "$i"/etc/grub.d/
        fi
    done
    for i in /mnt/SSD/* ; do
        # copy to distributions installed on the SDD
        if [ -d "$i"/etc/grub.d ]; then 
            cp /tmp/custom-grub/40_custom-"$My_Distro_Name" "$i"/etc/grub.d/
        fi
    done
    #   7. Cleanup temporary working directory
    rm -rf /tmp/custom-grub/40_custom-"$My_Distro_Name"
    #   8. Remove custom GRUB2 entry from ** this ** installation
    rm -rf /etc/grub.d/40_custom-"$My_Distro_Name"

end script
