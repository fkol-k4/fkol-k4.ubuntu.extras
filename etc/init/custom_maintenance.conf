description "Distribution maintenance init script"

start on runlevel [06]

script
    #   CREATE VARIABLES
    #   1. GRUB2 name entry (40_custom-... file)
    #   example: sda-01-Ubuntu_Trusty
    MY_DISTRO_NAME="sdx-00-Input-distro-name"
    #   2. mountpoint list
    #   mountpoint list for other installed distributions. Enter either direct
    #   mountpoint (eg. /mnt/<distribution>) or subvolume's parent volume (eg.
    #   /mnt/<partition> if distribution is on /mnt/<partition>/<distribution>)
    MOUNTPOINT_LIST="
    /mnt/HDD
    /mnt/SSD
    "

	#   CLEAR BOOTCHART LOGS
    if [ -d /var/log/bootchart ]; then
    	rm -f /var/log/bootchart/*
    fi

    #   REMOVE '.goutputstream-*' FILES FROM USER'S HOME FOLDER
    for user_dir in /home/*; do
        rm -f "$user_dir"/.goutputstream-*
    done

    #   UNHIDE XDG STARTUP APPLICATIONS
    if [ -d /etc/xdg/autostart ]; then
        sed -i 's/NoDisplay=true/NoDisplay=false/g' /etc/xdg/autostart/*.desktop
    fi

    #   UNHIDE GNOME STARTUP APPLICATIONS
    if [ -d /usr/share/gnome/autostart ]; then
        sed -i 's/NoDisplay=true/NoDisplay=false/g' /usr/share/gnome/autostart/*.desktop
    fi

    #   MAKE A GRUB2 ENTRY FOR EVERY OTHER (MOUNTED) DISTRO

    #   1. Define GRUB2 target file && update GRUB2 configuration
    if [ -f /boot/grub/grub.cfg ]; then
        TARGET_FILE="/boot/grub/grub.cfg"
    elif [ -f /boot/efi/EFI/ubuntu/grub.cfg ]; then
        TARGET_FILE="/boot/efi/EFI/ubuntu/grub.cfg"
    fi

    #   2. Create temporary working directory
    mkdir -p /tmp/custom-grub

    #   3. Creating GRUB2 entry
    echo '#!/bin/sh
exec tail -n +3 $0
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the <exec tail> line above.
' > "/tmp/custom-grub/40_custom-$MY_DISTRO_NAME"

    #   4. Creating the rest of custom GRUB2 entry
    sed '/### BEGIN \/etc\/grub.d\/10_linux ###/,/### END \/etc\/grub.d\/10_linux ###/!d' "$TARGET_FILE" > /tmp/custom-grub-prep
    sed '/menuentry/,/### END \/etc\/grub.d\/10_linux ###/!d' /tmp/custom-grub-prep >> "/tmp/custom-grub/40_custom-$MY_DISTRO_NAME"

    #   5. Turn custom GRUB2 entry into an executable file
    chmod +x "/tmp/custom-grub/40_custom-$MY_DISTRO_NAME"

    #   6. Copy custom GRUB2 entry file to other distributions
    #   6-a. Direct distribution mountpoint
    for i in $MOUNTPOINT_LIST; do
        if [ -d "$i/etc/grub.d" ]; then
            cp "/tmp/custom-grub/40_custom-$MY_DISTRO_NAME" "$i/etc/grub.d"/
        fi
    done
    #   6-b. Parent mountpoint (distro is installed inside subvolume)
    for i in $MOUNTPOINT_LIST/* ; do
        if [ -d "$i/etc/grub.d" ]; then
            cp "/tmp/custom-grub/40_custom-$MY_DISTRO_NAME" "$i/etc/grub.d"/
        fi
    done

    #   7. Remove custom GRUB2 entry from active installation
    if [ -f "/etc/grub.d/40_custom-$MY_DISTRO_NAME" ]; then
        rm -f "/etc/grub.d/40_custom-$MY_DISTRO_NAME"
    fi

end script
